#import "MSErrorLogFormatter.h"

@class MSPLCrashReportThreadInfo;

@interface MSErrorLogFormatter ()

/**
 * Remove user information from a path when the crash happened in the simulator.
 *
 * @param path The path that needs to be anonymized.
 *
 * @return The anonymized path.
 */
+ (NSString *)anonymizedPathFromPath:(NSString *)path;

/**
 * Determines the type of a binary image.
 *
 * @param imagePath The path to the binary.
 * @param processPath The path to the process.
 *
 * @return the type of the image, e.g. MSBinaryImageTypeAppFramework. @see MSBinaryImageType.
 */
+ (MSBinaryImageType)imageTypeForImagePath:(NSString *)imagePath processPath:(NSString *)processPath;

/**
 * Create an id for a crash report. Uses the one generated by PLCrashReporter or generates a new UUID.
 *
 * @param report The crash report.
 *
 * @return An error id as a NSString.
 */
+ (NSString *)errorIdForCrashReport:(MSPLCrashReport *)report;

/**
 * Convenience method to add process information and application path to an error log. For simulator builds, it will anonymize the path and
 * remove user information from it. It was not split into two methods because separating into a method to add the processInfo and one for
 * the applicationPath would mean duplicating logic.
 *
 * @param errorLog The error log object that will be returned.
 * @param crashReport The crash
 *
 * @return The error log with process information and the application path.
 */
+ (MSAppleErrorLog *)addProcessInfoAndApplicationPathTo:(MSAppleErrorLog *)errorLog fromCrashReport:(MSPLCrashReport *)crashReport;

/**
 * Convenience method to find the crashed thread in a crash report.
 *
 * @param report The crash report.
 *
 * @return The crashed thread info.
 */
+ (MSPLCrashReportThreadInfo *)findCrashedThreadInReport:(MSPLCrashReport *)report;

/**
 * Extract image addresses from a crash report.
 *
 * @param report The crash report.
 *
 * @return An array of addresses without duplicates.
 */
+ (NSArray *)addressesFromReport:(MSPLCrashReport *)report;

@end
